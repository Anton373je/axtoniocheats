--[[ 
    Universal Roblox Script | 366axtonio v1.0
    - Nutzt Orion GUI Library, sonst Fallback
    - Voll funktionsfähig: Player, ESP, AutoFarm, Misc
    - Bewegbares Fenster & Notification bei Ladefertig
--]]

-- URL der offiziellen Orion-Quelle
local ORION_URL = "https://raw.githubusercontent.com/shlexware/Orion/main/source"

-- HTTP GET Helfer
local function detect_http_get()
    if pcall(function() return game.HttpGet end) and type(game.HttpGet) == "function" then
        return function(url) return game:HttpGet(url, true) end
    end
    if type(syn) == "table" and type(syn.request) == "function" then
        return function(url)
            local ok, r = pcall(function() return syn.request({Url=url, Method="GET"}) end)
            if ok and r and r.Body then return r.Body end
        end
    end
    if type(http) == "table" and type(http.request) == "function" then
        return function(url)
            local ok, r = pcall(function() return http.request({Url=url, Method="GET"}) end)
            if ok and r and r.Body then return r.Body end
        end
    end
    local HttpService = game:GetService("HttpService")
    if HttpService and type(HttpService.GetAsync) == "function" then
        return function(url)
            local ok,res = pcall(function() return HttpService:GetAsync(url) end)
            if ok then return res end
        end
    end
    return nil
end

local http_get = detect_http_get()
local loader = loadstring or (syn and syn.loadstring) or (KRNL and KRNL.loadstring) or (Fluxus and Fluxus.loadstring)

local OrionLib = nil
if loader and http_get then
    local ok, source = pcall(function() return http_get(ORION_URL) end)
    if ok and type(source)=="string" and #source>50 then
        local ok2, chunk = pcall(function() return loader(source) end)
        if ok2 and type(chunk)=="function" then
            local ok3, lib = pcall(chunk)
            if ok3 and type(lib)=="table" then
                OrionLib = lib
            elseif ok3 and type(lib)=="function" then
                local ok4, maybeLib = pcall(lib)
                if ok4 and type(maybeLib)=="table" then OrionLib = maybeLib end
            end
        end
    end
end

-- Fallback GUI falls Orion nicht geladen
if not OrionLib then
    warn("[Fallback] Orion konnte nicht geladen werden — benutze lokale GUI")
    local fallbackScreen = nil
    local Fallback = {}

    function Fallback:MakeWindow(opts)
        local parent = (game:GetService("Players").LocalPlayer and game:GetService("Players").LocalPlayer:FindFirstChild("PlayerGui")) or game:GetService("CoreGui")
        fallbackScreen = Instance.new("ScreenGui")
        fallbackScreen.Name = opts.Name or "FallbackUI"
        fallbackScreen.ResetOnSpawn = false
        fallbackScreen.Parent = parent

        local main = Instance.new("Frame")
        main.Name = "Main"
        main.Size = UDim2.new(0, 340, 0, 420)
        main.Position = UDim2.new(0.5, -170, 0.12, 0)
        main.BackgroundColor3 = Color3.fromRGB(30,30,30)
        main.BorderSizePixel = 0
        main.Parent = fallbackScreen
        main.Active = true
        main.Draggable = true

        local title = Instance.new("TextLabel")
        title.Parent = main
        title.Size = UDim2.new(1,0,0,30)
        title.Position = UDim2.new(0,0,0,0)
        title.BackgroundTransparency = 1
        title.Text = opts.Name or "Fallback UI"
        title.TextColor3 = Color3.fromRGB(255,255,255)
        title.Font = Enum.Font.SourceSansSemibold
        title.TextSize = 18

        local tabsList = Instance.new("Frame")
        tabsList.Parent = main
        tabsList.Size = UDim2.new(0,100,1,-30)
        tabsList.Position = UDim2.new(0,0,0,30)
        tabsList.BackgroundTransparency = 1

        local contentArea = Instance.new("Frame")
        contentArea.Parent = main
        contentArea.Size = UDim2.new(1,-100,1,-30)
        contentArea.Position = UDim2.new(0,100,0,30)
        contentArea.BackgroundTransparency = 1

        local tabs = {}
        local function clearContent()
            for _,child in pairs(contentArea:GetChildren()) do
                if child:IsA("Frame") then child.Visible=false end
            end
        end

        local Window = {}
        function Window:MakeTab(tabOpts)
            local tabName = tabOpts.Name or "Tab"
            local btn = Instance.new("TextButton")
            btn.Parent = tabsList
            btn.Size = UDim2.new(1,-10,0,30)
            btn.Position = UDim2.new(0,5,0,5+(#tabs*35))
            btn.Text = tabName
            btn.BackgroundTransparency = 0.2
            btn.TextColor3 = Color3.fromRGB(230,230,230)
            btn.Font = Enum.Font.SourceSans
            btn.TextSize = 14
            btn.AutoButtonColor = true

            local frame = Instance.new("Frame")
            frame.Parent = contentArea
            frame.Size = UDim2.new(1,-10,1,-10)
            frame.Position = UDim2.new(0,5,0,5)
            frame.BackgroundTransparency = 1
            frame.Visible=false

            btn.MouseButton1Click:Connect(function()
                clearContent()
                frame.Visible = true
            end)

            local tab = {}
            function tab:AddSlider(params)
                local container = Instance.new("Frame", frame)
                container.Size = UDim2.new(1,-10,0,40)
                container.Position = UDim2.new(0,5,0,(#frame:GetChildren()-1)*45)
                container.BackgroundTransparency=1
                local label = Instance.new("TextLabel", container)
                label.Size=UDim2.new(0.6,0,1,0)
                label.Position=UDim2.new(0,0,0,0)
                label.BackgroundTransparency=1
                local value=params.Default or params.Min or 0
                label.Text=(params.Name or "Slider")..": "..tostring(value)
                label.TextColor3=Color3.fromRGB(230,230,230)
                label.Font=Enum.Font.SourceSans
                label.TextSize=14

                local minus = Instance.new("TextButton", container)
                minus.Size=UDim2.new(0.2,-5,1,-6)
                minus.Position=UDim2.new(0.6,5,0,3)
                minus.Text="-"
                minus.Font=Enum.Font.SourceSansBold
                minus.TextSize=18
                local plus = Instance.new("TextButton", container)
                plus.Size=UDim2.new(0.2,-5,1,-6)
                plus.Position=UDim2.new(0.8,0,0,3)
                plus.Text="+"
                plus.Font=Enum.Font.SourceSansBold
                plus.TextSize=18

                local min=params.Min or 0
                local max=params.Max or 100
                local inc=params.Increment or 1
                local function apply(v)
                    value=v
                    label.Text=(params.Name or "Slider")..": "..tostring(value)
                    if typeof(params.Callback)=="function" then pcall(params.Callback,value) end
                end
                minus.MouseButton1Click:Connect(function() apply(math.max(min,value-inc)) end)
                plus.MouseButton1Click:Connect(function() apply(math.min(max,value+inc)) end)
                if typeof(params.Callback)=="function" then pcall(params.Callback,value) end
            end

            function tab:AddToggle(params)
                local btn = Instance.new("TextButton", frame)
                btn.Size=UDim2.new(1,-10,0,30)
                btn.Position=UDim2.new(0,5,0,(#frame:GetChildren()-1)*35)
                local state=params.Default or false
                btn.Text=(params.Name or "Toggle").." : "..(state and "On" or "Off")
                btn.Font=Enum.Font.SourceSans
                btn.TextColor3=Color3.fromRGB(230,230,230)
                btn.AutoButtonColor=true
                btn.MouseButton1Click:Connect(function()
                    state=not state
                    btn.Text=(params.Name or "Toggle").." : "..(state and "On" or "Off")
                    if typeof(params.Callback)=="function" then pcall(params.Callback,state) end
                end)
                if typeof(params.Callback)=="function" then pcall(params.Callback,state) end
            end

            function tab:AddButton(params)
                local btn=Instance.new("TextButton", frame)
                btn.Size=UDim2.new(1,-10,0,30)
                btn.Position=UDim2.new(0,5,0,(#frame:GetChildren()-1)*35)
                btn.Text=params.Name or "Button"
                btn.Font=Enum.Font.SourceSans
                btn.TextColor3=Color3.fromRGB(230,230,230)
                btn.AutoButtonColor=true
                btn.MouseButton1Click:Connect(function() if typeof(params.Callback)=="function" then pcall(params.Callback) end end)
            end

            table.insert(tabs,{btn=btn,frame=frame})
            return tab
        end

        function Window:Init() end
        return Window
    end

    function Fallback:Init() end

    function Fallback:MakeNotification(params)
        if not fallbackScreen then return end
        local note=Instance.new("TextLabel", fallbackScreen)
        note.Size=UDim2.new(0,250,0,50)
        note.Position=UDim2.new(0.5,-125,0.05,0)
        note.BackgroundTransparency=0.2
        note.BackgroundColor3=Color3.fromRGB(20,20,20)
        note.TextColor3=Color3.fromRGB(255,255,255)
        note.Font=Enum.Font.SourceSans
        note.TextSize=16
        note.Text=(params.Name and (params.Name.."\n") or "")..(params.Content or "")
        local t=params.Time or 3
        spawn(function() wait(t) pcall(function() note:Destroy() end) end)
    end

    function Fallback:Destroy()
        if fallbackScreen and fallbackScreen.Parent then pcall(function() fallbackScreen:Destroy() end) end
        fallbackScreen=nil
    end

    OrionLib=Fallback
end

-- === GUI erstellen ===
local Window = OrionLib:MakeWindow({Name="366axtonio Script | v1.0", HidePremium=false, SaveConfig=true, ConfigFolder="UniversalScript"})

-- ===== Player Tab =====
local PlayerTab = Window:MakeTab({Name="Player", Icon="rbxassetid://4483345998", PremiumOnly=false})
PlayerTab:AddSlider({Name="WalkSpeed", Min=16, Max=500, Default=16, Increment=1, Callback=function(v)
    local plr=game.Players.LocalPlayer
    if plr and plr.Character then
        local hum=plr.Character:FindFirstChildOfClass("Humanoid")
        if hum then pcall(function() hum.WalkSpeed=v end) end
    end
end})
PlayerTab:AddSlider({Name="JumpPower", Min=50, Max=500, Default=50, Increment=1, Callback=function(v)
    local plr=game.Players.LocalPlayer
    if plr and plr.Character then
        local hum=plr.Character:FindFirstChildOfClass("Humanoid")
        if hum then pcall(function() hum.JumpPower=v end) end
    end
end})

-- ===== ESP Tab =====
local ESPTab = Window:MakeTab({Name="ESP", Icon="rbxassetid://4483345998", PremiumOnly=false})
local ESPEnabled=false
local ESPBoxes={}
ESPTab:AddToggle({Name="Enable ESP", Default=false, Callback=function(Value)
    ESPEnabled=Value
    if ESPEnabled then
        for _,plr in pairs(game.Players:GetPlayers()) do
            if plr~=game.Players.LocalPlayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                local bb=Instance.new("BillboardGui")
                bb.Name="ESPBillboard"
                bb.Size=UDim2.new(0,100,0,50)
                bb.Adornee=plr.Character.HumanoidRootPart
                bb.AlwaysOnTop=true
                local label=Instance.new("TextLabel",bb)
                label.Size=UDim2.new(1,0,1,0)
                label.BackgroundTransparency=1
                label.TextColor3=Color3.new(1,0,0)
                label.TextScaled=true
                label.Text=plr.Name
                bb.Parent=game.CoreGui
                ESPBoxes[plr]=bb
            end
        end
        game.Players.PlayerAdded:Connect(function(plr)
            plr.CharacterAdded:Connect(function(char)
                if ESPEnabled and plr~=game.Players.LocalPlayer and char:FindFirstChild("HumanoidRootPart") then
                    local bb=Instance.new("BillboardGui")
                    bb.Name="ESPBillboard"
                    bb.Size=UDim2.new(0,100,0,50)
                    bb.Adornee=char.HumanoidRootPart
                    bb.AlwaysOnTop=true
                    local label=Instance.new("TextLabel",bb)
                    label.Size=UDim2.new(1,0,1,0)
                    label.BackgroundTransparency=1
                    label.TextColor3=Color3.new(1,0,0)
                    label.TextScaled=true
                    label.Text=plr.Name
                    bb.Parent=game.CoreGui
                    ESPBoxes[plr]=bb
                end
            end)
        end)
    else
        for _,b in pairs(ESPBoxes) do pcall(function() b:Destroy() end) end
        ESPBoxes={}
    end
end})

-- ===== AutoFarm Tab =====
local FarmTab = Window:MakeTab({Name="AutoFarm", Icon="rbxassetid://4483345998", PremiumOnly=false})
local AutoFarmEnabled=false
FarmTab:AddToggle({Name="Auto Farm", Default=false, Callback=function(Value)
    AutoFarmEnabled=Value
    spawn(function()
        while AutoFarmEnabled do
            wait(0.5)
            local plr=game.Players.LocalPlayer
            if plr and plr:FindFirstChild("PlayerGui") then
                local btn=plr.PlayerGui:FindFirstChild("ClickButton")
                if btn then
                    if btn:IsA("RemoteEvent") then pcall(function() btn:FireServer() end)
                    elseif btn:IsA("TextButton") then pcall(function() btn:Activate() end) end
                end
            end
        end
    end)
end})

-- ===== Misc Tab =====
local MiscTab = Window:MakeTab({Name="Misc", Icon="rbxassetid://4483345998", PremiumOnly=false})
MiscTab:AddButton({Name="Rejoin Server", Callback=function()
    local ts=game:GetService("TeleportService")
    pcall(function() ts:Teleport(game.PlaceId, game.Players.LocalPlayer) end)
end})
MiscTab:AddButton({Name="Destroy GUI", Callback=function()
    if OrionLib and type(OrionLib.Destroy)=="function" then pcall(function() OrionLib:Destroy() end) end
end})

-- ===== Init & Notification =====
if OrionLib and type(OrionLib.Init)=="function" then pcall(function() OrionLib:Init() end) end
if OrionLib and type(OrionLib.MakeNotification)=="function" then
    pcall(function()
        OrionLib:MakeNotification({Name="Loaded", Content="Axtonio Script loaded successfully!", Time=5})
    end)
end
